import type { AgentWithRelations, InterfaceKind } from './types'

export const TAGS = [
	// Crypto & Web3
	{ id: 't-trading', slug: 'trading', label: 'Trading', category: 'Crypto & Web3' },
	{ id: 't-defi', slug: 'defi', label: 'DeFi', category: 'Crypto & Web3' },
	{ id: 't-nft', slug: 'nft', label: 'NFT', category: 'Crypto & Web3' },
	{ id: 't-memecoin', slug: 'memecoin', label: 'Memecoin', category: 'Crypto & Web3' },
	{ id: 't-research', slug: 'research', label: 'Research', category: 'Crypto & Web3' },
	{ id: 't-airdrop', slug: 'airdrop', label: 'Airdrop', category: 'Crypto & Web3' },
	{ id: 't-farming', slug: 'farming', label: 'Farming', category: 'Crypto & Web3' },
	{ id: 't-portfolio', slug: 'portfolio', label: 'Portfolio', category: 'Crypto & Web3' },
	{ id: 't-risk', slug: 'risk', label: 'Risk', category: 'Crypto & Web3' },
	{ id: 't-sentiment', slug: 'sentiment', label: 'Sentiment', category: 'Crypto & Web3' },
	{ id: 't-onchain', slug: 'onchain', label: 'Onchain', category: 'Crypto & Web3' },
	{ id: 't-swap', slug: 'swap', label: 'Swap', category: 'Crypto & Web3' },
	{ id: 't-wallet', slug: 'wallet', label: 'Wallet', category: 'Crypto & Web3' },
	{ id: 't-staking', slug: 'staking', label: 'Staking', category: 'Crypto & Web3' },
	{ id: 't-governance', slug: 'governance', label: 'Governance', category: 'Crypto & Web3' },
	{ id: 't-launch', slug: 'launch', label: 'Launch', category: 'Crypto & Web3' },
	{ id: 't-audit', slug: 'audit', label: 'Audit', category: 'Crypto & Web3' },
	{ id: 't-contract', slug: 'contract', label: 'Contract', category: 'Crypto & Web3' },
	{ id: 't-tx-optimizer', slug: 'tx-optimizer', label: 'Tx Optimizer', category: 'Crypto & Web3' },
	{ id: 't-signals', slug: 'signals', label: 'Signals', category: 'Crypto & Web3' },
	// Business & Productivity
	{ id: 't-project', slug: 'project', label: 'Project', category: 'Business & Productivity' },
	{ id: 't-schedule', slug: 'schedule', label: 'Schedule', category: 'Business & Productivity' },
	{ id: 't-crm', slug: 'crm', label: 'CRM', category: 'Business & Productivity' },
	{ id: 't-sales', slug: 'sales', label: 'Sales', category: 'Business & Productivity' },
	{ id: 't-marketing', slug: 'marketing', label: 'Marketing', category: 'Business & Productivity' },
	{ id: 't-copywriting', slug: 'copywriting', label: 'Copywriting', category: 'Business & Productivity' },
	{ id: 't-presentation', slug: 'presentation', label: 'Presentation', category: 'Business & Productivity' },
	{ id: 't-insights', slug: 'insights', label: 'Insights', category: 'Business & Productivity' },
	{ id: 't-hr', slug: 'hr', label: 'HR', category: 'Business & Productivity' },
	{ id: 't-finance', slug: 'finance', label: 'Finance', category: 'Business & Productivity' },
	{ id: 't-legal', slug: 'legal', label: 'Legal', category: 'Business & Productivity' },
	{ id: 't-compliance', slug: 'compliance', label: 'Compliance', category: 'Business & Productivity' },
	{ id: 't-procurement', slug: 'procurement', label: 'Procurement', category: 'Business & Productivity' },
	{ id: 't-support', slug: 'support', label: 'Support', category: 'Business & Productivity' },
	// Developer & Tech
	{ id: 't-code', slug: 'code', label: 'Code', category: 'Developer & Tech' },
	{ id: 't-devops', slug: 'devops', label: 'DevOps', category: 'Developer & Tech' },
	{ id: 't-testing', slug: 'testing', label: 'Testing', category: 'Developer & Tech' },
	{ id: 't-debugging', slug: 'debugging', label: 'Debugging', category: 'Developer & Tech' },
	{ id: 't-docs', slug: 'docs', label: 'Docs', category: 'Developer & Tech' },
	{ id: 't-api', slug: 'api', label: 'API', category: 'Developer & Tech' },
	{ id: 't-database', slug: 'database', label: 'Database', category: 'Developer & Tech' },
	{ id: 't-security', slug: 'security', label: 'Security', category: 'Developer & Tech' },
	{ id: 't-cloud', slug: 'cloud', label: 'Cloud', category: 'Developer & Tech' },
	{ id: 't-infra', slug: 'infra', label: 'Infra', category: 'Developer & Tech' },
	{ id: 't-game-dev', slug: 'game-dev', label: 'Game Dev', category: 'Developer & Tech' },
	{ id: 't-training', slug: 'training', label: 'Training', category: 'Developer & Tech' },
	{ id: 't-prompting', slug: 'prompting', label: 'Prompting', category: 'Developer & Tech' },
	// Creative & Media
	{ id: 't-content', slug: 'content', label: 'Content', category: 'Creative & Media' },
	{ id: 't-video', slug: 'video', label: 'Video', category: 'Creative & Media' },
	{ id: 't-design', slug: 'design', label: 'Design', category: 'Creative & Media' },
	{ id: 't-music', slug: 'music', label: 'Music', category: 'Creative & Media' },
	{ id: 't-storytelling', slug: 'storytelling', label: 'Storytelling', category: 'Creative & Media' },
	{ id: 't-script', slug: 'script', label: 'Script', category: 'Creative & Media' },
	{ id: 't-3d', slug: '3d', label: '3D', category: 'Creative & Media' },
	{ id: 't-fashion', slug: 'fashion', label: 'Fashion', category: 'Creative & Media' },
	{ id: 't-architecture', slug: 'architecture', label: 'Architecture', category: 'Creative & Media' },
	{ id: 't-photo', slug: 'photo', label: 'Photo', category: 'Creative & Media' },
	{ id: 't-social', slug: 'social', label: 'Social', category: 'Creative & Media' },
	{ id: 't-meme', slug: 'meme', label: 'Meme', category: 'Creative & Media' },
	{ id: 't-branding', slug: 'branding', label: 'Branding', category: 'Creative & Media' },
	// Knowledge & Education
	{ id: 't-teaching', slug: 'teaching', label: 'Teaching', category: 'Knowledge & Education' },
	{ id: 't-tutoring', slug: 'tutoring', label: 'Tutoring', category: 'Knowledge & Education' },
	{ id: 't-language', slug: 'language', label: 'Language', category: 'Knowledge & Education' },
	{ id: 't-exam', slug: 'exam', label: 'Exam', category: 'Knowledge & Education' },
	{ id: 't-summarizer', slug: 'summarizer', label: 'Summarizer', category: 'Knowledge & Education' },
	{ id: 't-knowledge', slug: 'knowledge', label: 'Knowledge', category: 'Knowledge & Education' },
	{ id: 't-history', slug: 'history', label: 'History', category: 'Knowledge & Education' },
	{ id: 't-science', slug: 'science', label: 'Science', category: 'Knowledge & Education' },
	{ id: 't-math', slug: 'math', label: 'Math', category: 'Knowledge & Education' },
	{ id: 't-philosophy', slug: 'philosophy', label: 'Philosophy', category: 'Knowledge & Education' },
	// Personal & Lifestyle
	{ id: 't-health', slug: 'health', label: 'Health', category: 'Personal & Lifestyle' },
	{ id: 't-fitness', slug: 'fitness', label: 'Fitness', category: 'Personal & Lifestyle' },
	{ id: 't-nutrition', slug: 'nutrition', label: 'Nutrition', category: 'Personal & Lifestyle' },
	{ id: 't-mindset', slug: 'mindset', label: 'Mindset', category: 'Personal & Lifestyle' },
	{ id: 't-coach', slug: 'coach', label: 'Coach', category: 'Personal & Lifestyle' },
	{ id: 't-travel', slug: 'travel', label: 'Travel', category: 'Personal & Lifestyle' },
	{ id: 't-shopping', slug: 'shopping', label: 'Shopping', category: 'Personal & Lifestyle' },
	{ id: 't-budget', slug: 'budget', label: 'Budget', category: 'Personal & Lifestyle' },
	{ id: 't-home', slug: 'home', label: 'Home', category: 'Personal & Lifestyle' },
	{ id: 't-style', slug: 'style', label: 'Style', category: 'Personal & Lifestyle' },
	{ id: 't-dating', slug: 'dating', label: 'Dating', category: 'Personal & Lifestyle' },
	{ id: 't-events', slug: 'events', label: 'Events', category: 'Personal & Lifestyle' },
	// Specialized
	{ id: 't-medical', slug: 'medical', label: 'Medical', category: 'Specialized' },
	{ id: 't-biotech', slug: 'biotech', label: 'Biotech', category: 'Specialized' },
	{ id: 't-climate', slug: 'climate', label: 'Climate', category: 'Specialized' },
	{ id: 't-energy', slug: 'energy', label: 'Energy', category: 'Specialized' },
	{ id: 't-urban', slug: 'urban', label: 'Urban', category: 'Specialized' },
	{ id: 't-journalism', slug: 'journalism', label: 'Journalism', category: 'Specialized' },
	{ id: 't-politics', slug: 'politics', label: 'Politics', category: 'Specialized' },
	{ id: 't-military', slug: 'military', label: 'Military', category: 'Specialized' },
	// Gaming (explicitly covered)
	{ id: 't-gaming', slug: 'gaming', label: 'Gaming', category: 'Gaming' },
	{ id: 't-esports', slug: 'esports', label: 'Esports', category: 'Gaming' },
	{ id: 't-mods', slug: 'mods', label: 'Mods', category: 'Gaming' },
	{ id: 't-streaming', slug: 'streaming', label: 'Streaming', category: 'Gaming' },
] as const

function avatar(seed: string) {
	return `https://api.dicebear.com/7.x/lorelei-neutral/png?seed=${encodeURIComponent(seed)}&backgroundColor=b6e3f4,c0aede,d1d4f9,ffd5dc,ffdfbf&shapeColor=ffffff&mouthColor=000000`
}

export const AGENTS: AgentWithRelations[] = [
	{
		id: '8d0f6e2e-6f5c-4b40-9f3a-b0c1b59e3d01',
		slug: 'starter-agent',
		name: 'Starter Agent',
		summary: 'A demo ElizaOS agent.',
		thumbnailUrl: avatar('8d0f6e2e-6f5c-4b40-9f3a-b0c1b59e3d01'),
		websiteUrl: 'https://example.com',
		socials: { x: 'https://x.com/example' },
		ownerWallet: 'DemoWallet111111111111111111111111111111111',
		status: 'published',
		links: { github: 'https://github.com/example/repo' },
		extras: {},
		createdAt: '2025-01-03T10:00:00.000Z',
		donationWallet: 'So11111111111111111111111111111111111111112',
		interfaces: [
			{
				id: '8d0f6e2e-6f5c-4b40-9f3a-b0c1b59e3d01-web',
				agentId: '8d0f6e2e-6f5c-4b40-9f3a-b0c1b59e3d01',
				kind: 'web_ui' as InterfaceKind,
				url: 'https://example.com',
				accessPolicy: null,
				isPrimary: true,
			},
		],
		tags: [TAGS.find(t => t.slug === 'branding')!, TAGS.find(t => t.slug === 'content')!, TAGS.find(t => t.slug === 'presentation')!],
	},
	{
		id: 'a2a2b3ac-61d1-4a67-b5d2-291d5d22b2f3',
		slug: 'support-genius',
		name: 'Support Genius',
		summary: 'Customer support assistant for FAQs and ticket triage.',
		thumbnailUrl: avatar('a2a2b3ac-61d1-4a67-b5d2-291d5d22b2f3'),
		websiteUrl: 'https://support.example.com',
		ownerWallet: 'DemoWallet222222222222222222222222222222222',
		status: 'published',
		createdAt: '2025-02-15T14:30:00.000Z',
		donationWallet: '11111111111111111111111111111111',
		interfaces: [
			{
				id: 'a2a2b3ac-61d1-4a67-b5d2-291d5d22b2f3-web',
				agentId: 'a2a2b3ac-61d1-4a67-b5d2-291d5d22b2f3',
				kind: 'web_ui' as InterfaceKind,
				url: 'https://support.example.com',
				accessPolicy: null,
				isPrimary: true,
			},
		],
		tags: [TAGS.find(t => t.slug === 'support')!, TAGS.find(t => t.slug === 'crm')!, TAGS.find(t => t.slug === 'insights')!],
	},
	{
		id: '5b84c9d7-1a83-4e9b-95b1-9b4f4a92d1ef',
		slug: 'code-copilot',
		name: 'Code Copilot',
		summary: 'Coding assistant that explains, reviews, and generates code.',
		thumbnailUrl: avatar('5b84c9d7-1a83-4e9b-95b1-9b4f4a92d1ef'),
		websiteUrl: 'https://code.example.com',
		ownerWallet: 'DemoWallet333333333333333333333333333333333',
		status: 'published',
		createdAt: '2025-03-10T09:15:00.000Z',
		donationWallet: 'Stake11111111111111111111111111111111111111',
		interfaces: [
			{
				id: '5b84c9d7-1a83-4e9b-95b1-9b4f4a92d1ef-web',
				agentId: '5b84c9d7-1a83-4e9b-95b1-9b4f4a92d1ef',
				kind: 'web_ui' as InterfaceKind,
				url: 'https://code.example.com',
				accessPolicy: null,
				isPrimary: true,
			},
			{
				id: '5b84c9d7-1a83-4e9b-95b1-9b4f4a92d1ef-api',
				agentId: '5b84c9d7-1a83-4e9b-95b1-9b4f4a92d1ef',
				kind: 'api' as InterfaceKind,
				url: 'https://api.code.example.com',
				accessPolicy: 'public',
				isPrimary: false,
			},
		],
		tags: [TAGS.find(t => t.slug === 'code')!, TAGS.find(t => t.slug === 'docs')!, TAGS.find(t => t.slug === 'testing')!],
	},
	{
		id: '4f7e1b2a-9a7d-45d3-92aa-8c1b2f3e4d5c',
		slug: 'api-hub',
		name: 'API Hub',
		summary: 'Public API endpoint for integrations and automation.',
		thumbnailUrl: avatar('4f7e1b2a-9a7d-45d3-92aa-8c1b2f3e4d5c'),
		websiteUrl: 'https://api.example.com/docs',
		ownerWallet: 'DemoWallet444444444444444444444444444444444',
		status: 'published',
		createdAt: '2025-03-28T16:45:00.000Z',
		donationWallet: 'Vote111111111111111111111111111111111111111',
		interfaces: [
			{
				id: '4f7e1b2a-9a7d-45d3-92aa-8c1b2f3e4d5c-api',
				agentId: '4f7e1b2a-9a7d-45d3-92aa-8c1b2f3e4d5c',
				kind: 'api' as InterfaceKind,
				url: 'https://api.example.com',
				accessPolicy: 'public',
				isPrimary: true,
			},
			{
				id: '4f7e1b2a-9a7d-45d3-92aa-8c1b2f3e4d5c-web',
				agentId: '4f7e1b2a-9a7d-45d3-92aa-8c1b2f3e4d5c',
				kind: 'web_ui' as InterfaceKind,
				url: 'https://api.example.com/docs',
				accessPolicy: null,
				isPrimary: false,
			},
		],
		tags: [TAGS.find(t => t.slug === 'api')!, TAGS.find(t => t.slug === 'docs')!, TAGS.find(t => t.slug === 'security')!],
	},
	{
		id: '3a2c1b4d-5e6f-7081-92a3-b4c5d6e7f809',
		slug: 'social-maven',
		name: 'Social Maven',
		summary: 'Community and influencer outreach assistant.',
		thumbnailUrl: avatar('3a2c1b4d-5e6f-7081-92a3-b4c5d6e7f809'),
		websiteUrl: 'https://social.example.com',
		ownerWallet: 'DemoWallet555555555555555555555555555555555',
		status: 'published',
		createdAt: '2025-04-04T11:20:00.000Z',
		donationWallet: 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',
		interfaces: [
			{
				id: '3a2c1b4d-5e6f-7081-92a3-b4c5d6e7f809-web',
				agentId: '3a2c1b4d-5e6f-7081-92a3-b4c5d6e7f809',
				kind: 'web_ui' as InterfaceKind,
				url: 'https://social.example.com',
				accessPolicy: null,
				isPrimary: true,
			},
		],
		tags: [TAGS.find(t => t.slug === 'social')!, TAGS.find(t => t.slug === 'marketing')!, TAGS.find(t => t.slug === 'branding')!],
	},
	{
		id: '7e6d5c4b-3a2f-1e0d-9c8b-7a6f5e4d3c2b',
		slug: 'eliza-website-bot',
		name: 'Eliza Website Bot',
		summary: 'Official ElizaOS showcase bot (demo).',
		thumbnailUrl: avatar('7e6d5c4b-3a2f-1e0d-9c8b-7a6f5e4d3c2b'),
		websiteUrl: 'https://elizaos.ai',
		ownerWallet: 'DemoWallet666666666666666666666666666666666',
		status: 'published',
		createdAt: '2025-04-12T08:00:00.000Z',
		interfaces: [
			{
				id: '7e6d5c4b-3a2f-1e0d-9c8b-7a6f5e4d3c2b-web',
				agentId: '7e6d5c4b-3a2f-1e0d-9c8b-7a6f5e4d3c2b',
				kind: 'web_ui' as InterfaceKind,
				url: 'https://elizaos.ai',
				accessPolicy: null,
				isPrimary: true,
			},
		],
		tags: [TAGS.find(t => t.slug === 'branding')!, TAGS.find(t => t.slug === 'content')!, TAGS.find(t => t.slug === 'presentation')!],
	},
	{
		id: 'e1a2b3c4-d5e6-7890-a1b2-c3d4e5f60708',
		slug: 'nova-support',
		name: 'Nova Support',
		summary: 'Automated helpdesk agent that resolves common issues and escalates smartly.',
		thumbnailUrl: avatar('e1a2b3c4-d5e6-7890-a1b2-c3d4e5f60708'),
		websiteUrl: 'https://nova.example.com',
		ownerWallet: 'DemoWallet777777777777777777777777777777777',
		status: 'published',
		createdAt: '2025-04-18T12:10:00.000Z',
		interfaces: [
			{
				id: 'e1a2b3c4-d5e6-7890-a1b2-c3d4e5f60708-web',
				agentId: 'e1a2b3c4-d5e6-7890-a1b2-c3d4e5f60708',
				kind: 'web_ui' as InterfaceKind,
				url: 'https://nova.example.com',
				accessPolicy: null,
				isPrimary: true,
			},
		],
		tags: [TAGS.find(t => t.slug === 'support')!, TAGS.find(t => t.slug === 'compliance')!, TAGS.find(t => t.slug === 'insights')!],
	},
	{
		id: 'f0e9d8c7-b6a5-4321-9abc-def012345678',
		slug: 'luna-code-assistant',
		name: 'Luna Code Assistant',
		summary: 'Pair programmer that suggests fixes, tests, and refactors safely.',
		thumbnailUrl: avatar('f0e9d8c7-b6a5-4321-9abc-def012345678'),
		websiteUrl: 'https://luna.example.com',
		ownerWallet: 'DemoWallet888888888888888888888888888888888',
		status: 'published',
		createdAt: '2025-04-20T09:00:00.000Z',
		interfaces: [
			{
				id: 'f0e9d8c7-b6a5-4321-9abc-def012345678-web',
				agentId: 'f0e9d8c7-b6a5-4321-9abc-def012345678',
				kind: 'web_ui' as InterfaceKind,
				url: 'https://luna.example.com',
				accessPolicy: null,
				isPrimary: true,
			},
		],
		tags: [TAGS.find(t => t.slug === 'code')!, TAGS.find(t => t.slug === 'testing')!, TAGS.find(t => t.slug === 'docs')!],
	},
	{
		id: '0a1b2c3d-4e5f-6071-8293-a4b5c6d7e8f9',
		slug: 'orion-api',
		name: 'Orion API',
		summary: 'High-availability API gateway for partner integrations.',
		thumbnailUrl: avatar('0a1b2c3d-4e5f-6071-8293-a4b5c6d7e8f9'),
		websiteUrl: 'https://orion.example.com/docs',
		ownerWallet: 'DemoWallet999999999999999999999999999999999',
		status: 'published',
		createdAt: '2025-04-22T18:30:00.000Z',
		interfaces: [
			{
				id: '0a1b2c3d-4e5f-6071-8293-a4b5c6d7e8f9-api',
				agentId: '0a1b2c3d-4e5f-6071-8293-a4b5c6d7e8f9',
				kind: 'api' as InterfaceKind,
				url: 'https://orion.example.com',
				accessPolicy: 'public',
				isPrimary: true,
			},
			{
				id: '0a1b2c3d-4e5f-6071-8293-a4b5c6d7e8f9-web',
				agentId: '0a1b2c3d-4e5f-6071-8293-a4b5c6d7e8f9',
				kind: 'web_ui' as InterfaceKind,
				url: 'https://orion.example.com/docs',
				accessPolicy: null,
				isPrimary: false,
			},
		],
		tags: [TAGS.find(t => t.slug === 'api')!, TAGS.find(t => t.slug === 'security')!],
	},
	{
		id: '1f2e3d4c-5b6a-7089-8a7b-6c5d4e3f2a1b',
		slug: 'astra-social-manager',
		name: 'Astra Social Manager',
		summary: 'Plans, writes, and schedules social content across platforms.',
		thumbnailUrl: avatar('1f2e3d4c-5b6a-7089-8a7b-6c5d4e3f2a1b'),
		websiteUrl: 'https://astra.example.com',
		ownerWallet: 'DemoWalletaaaaa00000000000000000000000000000',
		status: 'published',
		createdAt: '2025-04-25T07:45:00.000Z',
		interfaces: [
			{
				id: '1f2e3d4c-5b6a-7089-8a7b-6c5d4e3f2a1b-web',
				agentId: '1f2e3d4c-5b6a-7089-8a7b-6c5d4e3f2a1b',
				kind: 'web_ui' as InterfaceKind,
				url: 'https://astra.example.com',
				accessPolicy: null,
				isPrimary: true,
			},
		],
		tags: [TAGS.find(t => t.slug === 'marketing')!, TAGS.find(t => t.slug === 'content')!, TAGS.find(t => t.slug === 'social')!],
	},
	{
		id: '9a8b7c6d-5e4f-3a2b-1c0d-9e8f7a6b5c4d',
		slug: 'sentinel-security',
		name: 'Sentinel Security',
		summary: 'Detects anomalies and flags risky behavior via API.',
		thumbnailUrl: avatar('9a8b7c6d-5e4f-3a2b-1c0d-9e8f7a6b5c4d'),
		websiteUrl: 'https://sentinel.example.com',
		ownerWallet: 'DemoWalletbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb',
		status: 'published',
		createdAt: '2025-04-27T13:25:00.000Z',
		interfaces: [
			{
				id: '9a8b7c6d-5e4f-3a2b-1c0d-9e8f7a6b5c4d-api',
				agentId: '9a8b7c6d-5e4f-3a2b-1c0d-9e8f7a6b5c4d',
				kind: 'api' as InterfaceKind,
				url: 'https://sentinel.example.com/api',
				accessPolicy: 'key_required',
				isPrimary: true,
			},
			{
				id: '9a8b7c6d-5e4f-3a2b-1c0d-9e8f7a6b5c4d-web',
				agentId: '9a8b7c6d-5e4f-3a2b-1c0d-9e8f7a6b5c4d',
				kind: 'web_ui' as InterfaceKind,
				url: 'https://sentinel.example.com',
				accessPolicy: null,
				isPrimary: false,
			},
		],
		tags: [TAGS.find(t => t.slug === 'security')!, TAGS.find(t => t.slug === 'api')!, TAGS.find(t => t.slug === 'risk')!],
	},
	{
		id: '2b3c4d5e-6f70-8192-a3b4-c5d6e7f8091a',
		slug: 'atlas-research',
		name: 'Atlas Research',
		summary: 'Finds papers, extracts insights, and compiles literature reviews.',
		thumbnailUrl: avatar('2b3c4d5e-6f70-8192-a3b4-c5d6e7f8091a'),
		websiteUrl: 'https://atlas.example.com',
		ownerWallet: 'DemoWalletccccccccccccccccccccccccccccccccc',
		status: 'published',
		createdAt: '2025-05-01T10:05:00.000Z',
		interfaces: [
			{
				id: '2b3c4d5e-6f70-8192-a3b4-c5d6e7f8091a-web',
				agentId: '2b3c4d5e-6f70-8192-a3b4-c5d6e7f8091a',
				kind: 'web_ui' as InterfaceKind,
				url: 'https://atlas.example.com',
				accessPolicy: null,
				isPrimary: true,
			},
		],
		tags: [TAGS.find(t => t.slug === 'research')!, TAGS.find(t => t.slug === 'insights')!, TAGS.find(t => t.slug === 'science')!],
	},
	// New agents across various domains
	{
		id: 'c1d2e3f4-5678-49ab-9cde-000000000001',
		slug: 'defi-farmer-pro',
		name: 'DeFi Farmer Pro',
		summary: 'Tracks yields, rotates liquidity, and optimizes staking rewards.',
		thumbnailUrl: avatar('c1d2e3f4-5678-49ab-9cde-000000000001'),
		websiteUrl: 'https://defi.example.com',
		socials: { x: 'https://x.com/defifarmer', github: 'https://github.com/example/defi-farmer', farcaster: 'https://warpcast.com/defifarmer' },
		ownerWallet: 'DemoWalletDEFIFARMER',
		status: 'published',
		createdAt: '2025-05-03T08:00:00.000Z',
		interfaces: [
			{ id: 'c1d2e3f4-5678-49ab-9cde-000000000001-web', agentId: 'c1d2e3f4-5678-49ab-9cde-000000000001', kind: 'web_ui' as InterfaceKind, url: 'https://defi.example.com', accessPolicy: null, isPrimary: true },
			{ id: 'c1d2e3f4-5678-49ab-9cde-000000000001-api', agentId: 'c1d2e3f4-5678-49ab-9cde-000000000001', kind: 'api' as InterfaceKind, url: 'https://api.defi.example.com', accessPolicy: 'public', isPrimary: false },
		],
		tags: [TAGS.find(t => t.slug === 'defi')!, TAGS.find(t => t.slug === 'farming')!, TAGS.find(t => t.slug === 'staking')!],
	},
	{
		id: 'c1d2e3f4-5678-49ab-9cde-000000000002',
		slug: 'nft-curator',
		name: 'NFT Curator',
		summary: 'Discovers trending collections and curates social spotlights.',
		thumbnailUrl: avatar('c1d2e3f4-5678-49ab-9cde-000000000002'),
		websiteUrl: 'https://nft.example.com',
		socials: { x: 'https://x.com/nftcurator', github: 'https://github.com/example/nft-curator', farcaster: 'https://warpcast.com/nftcurator' },
		ownerWallet: 'DemoWalletNFTCURATOR',
		status: 'published',
		createdAt: '2025-05-04T10:00:00.000Z',
		interfaces: [
			{ id: 'c1d2e3f4-5678-49ab-9cde-000000000002-web', agentId: 'c1d2e3f4-5678-49ab-9cde-000000000002', kind: 'web_ui' as InterfaceKind, url: 'https://nft.example.com', accessPolicy: null, isPrimary: true },
		],
		tags: [TAGS.find(t => t.slug === 'nft')!, TAGS.find(t => t.slug === 'social')!, TAGS.find(t => t.slug === 'content')!],
	},
	{
		id: 'c1d2e3f4-5678-49ab-9cde-000000000003',
		slug: 'trading-signals',
		name: 'Trading Signals',
		summary: 'Generates on-chain and sentiment-driven trading alerts.',
		thumbnailUrl: avatar('c1d2e3f4-5678-49ab-9cde-000000000003'),
		websiteUrl: 'https://signals.example.com',
		socials: { x: 'https://x.com/tradingsignals', github: 'https://github.com/example/trading-signals' },
		ownerWallet: 'DemoWalletSIGNALS',
		status: 'published',
		createdAt: '2025-05-05T12:00:00.000Z',
		interfaces: [
			{ id: 'c1d2e3f4-5678-49ab-9cde-000000000003-api', agentId: 'c1d2e3f4-5678-49ab-9cde-000000000003', kind: 'api' as InterfaceKind, url: 'https://api.signals.example.com', accessPolicy: 'public', isPrimary: true },
		],
		tags: [TAGS.find(t => t.slug === 'trading')!, TAGS.find(t => t.slug === 'signals')!, TAGS.find(t => t.slug === 'risk')!, TAGS.find(t => t.slug === 'sentiment')!],
	},
	{
		id: 'c1d2e3f4-5678-49ab-9cde-000000000004',
		slug: 'wallet-guardian',
		name: 'Wallet Guardian',
		summary: 'Flags risky transactions and protects user wallets.',
		thumbnailUrl: avatar('c1d2e3f4-5678-49ab-9cde-000000000004'),
		websiteUrl: 'https://wallet.example.com',
		socials: { x: 'https://x.com/walletguardian', github: 'https://github.com/example/wallet-guardian' },
		ownerWallet: 'DemoWalletWALLETGUARD',
		status: 'published',
		createdAt: '2025-05-05T15:00:00.000Z',
		interfaces: [
			{ id: 'c1d2e3f4-5678-49ab-9cde-000000000004-web', agentId: 'c1d2e3f4-5678-49ab-9cde-000000000004', kind: 'web_ui' as InterfaceKind, url: 'https://wallet.example.com', accessPolicy: null, isPrimary: true },
		],
		tags: [TAGS.find(t => t.slug === 'wallet')!, TAGS.find(t => t.slug === 'security')!, TAGS.find(t => t.slug === 'onchain')!],
	},
	{
		id: 'c1d2e3f4-5678-49ab-9cde-000000000005',
		slug: 'cloud-cost-optimizer',
		name: 'Cloud Cost Optimizer',
		summary: 'Monitors cloud usage and recommends savings automatically.',
		thumbnailUrl: avatar('c1d2e3f4-5678-49ab-9cde-000000000005'),
		websiteUrl: 'https://cloudcost.example.com',
		socials: { x: 'https://x.com/cloudcost', github: 'https://github.com/example/cloud-cost-optimizer' },
		ownerWallet: 'DemoWalletCLOUDCOST',
		status: 'published',
		createdAt: '2025-05-06T09:00:00.000Z',
		interfaces: [
			{ id: 'c1d2e3f4-5678-49ab-9cde-000000000005-web', agentId: 'c1d2e3f4-5678-49ab-9cde-000000000005', kind: 'web_ui' as InterfaceKind, url: 'https://cloudcost.example.com', accessPolicy: null, isPrimary: true },
		],
		tags: [TAGS.find(t => t.slug === 'cloud')!, TAGS.find(t => t.slug === 'infra')!, TAGS.find(t => t.slug === 'finance')!],
	},
	{
		id: 'c1d2e3f4-5678-49ab-9cde-000000000006',
		slug: 'game-dev-build-bot',
		name: 'Game Dev Build Bot',
		summary: 'Automates builds, tests, and asset pipelines for game teams.',
		thumbnailUrl: avatar('c1d2e3f4-5678-49ab-9cde-000000000006'),
		websiteUrl: 'https://gamedev.example.com',
		socials: { x: 'https://x.com/gamedevbot', github: 'https://github.com/example/game-dev-bot', farcaster: 'https://warpcast.com/gamedevbot' },
		ownerWallet: 'DemoWalletGAMEDEV',
		status: 'published',
		createdAt: '2025-05-06T11:30:00.000Z',
		interfaces: [
			{ id: 'c1d2e3f4-5678-49ab-9cde-000000000006-web', agentId: 'c1d2e3f4-5678-49ab-9cde-000000000006', kind: 'web_ui' as InterfaceKind, url: 'https://gamedev.example.com', accessPolicy: null, isPrimary: true },
		],
		tags: [TAGS.find(t => t.slug === 'game-dev')!, TAGS.find(t => t.slug === 'devops')!, TAGS.find(t => t.slug === 'testing')!],
	},
	{
		id: 'c1d2e3f4-5678-49ab-9cde-000000000007',
		slug: 'esports-scheduler',
		name: 'Esports Scheduler',
		summary: 'Schedules scrims, tournaments, and streams across teams.',
		thumbnailUrl: avatar('c1d2e3f4-5678-49ab-9cde-000000000007'),
		websiteUrl: 'https://esports.example.com',
		socials: { x: 'https://x.com/esportsscheduler' },
		ownerWallet: 'DemoWalletESPORTS',
		status: 'published',
		createdAt: '2025-05-06T13:00:00.000Z',
		interfaces: [
			{ id: 'c1d2e3f4-5678-49ab-9cde-000000000007-web', agentId: 'c1d2e3f4-5678-49ab-9cde-000000000007', kind: 'web_ui' as InterfaceKind, url: 'https://esports.example.com', accessPolicy: null, isPrimary: true },
		],
		tags: [TAGS.find(t => t.slug === 'esports')!, TAGS.find(t => t.slug === 'schedule')!, TAGS.find(t => t.slug === 'events')!],
	},
	{
		id: 'c1d2e3f4-5678-49ab-9cde-000000000008',
		slug: 'med-summary',
		name: 'Medical Summary',
		summary: 'Summarizes medical literature with references and caveats.',
		thumbnailUrl: avatar('c1d2e3f4-5678-49ab-9cde-000000000008'),
		websiteUrl: 'https://med.example.com',
		socials: { x: 'https://x.com/medsummary' },
		ownerWallet: 'DemoWalletMEDICAL',
		status: 'published',
		createdAt: '2025-05-07T08:30:00.000Z',
		interfaces: [
			{ id: 'c1d2e3f4-5678-49ab-9cde-000000000008-web', agentId: 'c1d2e3f4-5678-49ab-9cde-000000000008', kind: 'web_ui' as InterfaceKind, url: 'https://med.example.com', accessPolicy: null, isPrimary: true },
		],
		tags: [TAGS.find(t => t.slug === 'medical')!, TAGS.find(t => t.slug === 'summarizer')!, TAGS.find(t => t.slug === 'science')!],
	},
	{
		id: 'c1d2e3f4-5678-49ab-9cde-000000000009',
		slug: 'travel-planner',
		name: 'Travel Planner',
		summary: 'Plans itineraries and optimizes budget for multi-city trips.',
		thumbnailUrl: avatar('c1d2e3f4-5678-49ab-9cde-000000000009'),
		websiteUrl: 'https://travel.example.com',
		socials: { x: 'https://x.com/travelplanner', github: 'https://github.com/example/travel-planner' },
		ownerWallet: 'DemoWalletTRAVEL',
		status: 'published',
		createdAt: '2025-05-07T12:00:00.000Z',
		interfaces: [
			{ id: 'c1d2e3f4-5678-49ab-9cde-000000000009-web', agentId: 'c1d2e3f4-5678-49ab-9cde-000000000009', kind: 'web_ui' as InterfaceKind, url: 'https://travel.example.com', accessPolicy: null, isPrimary: true },
		],
		tags: [TAGS.find(t => t.slug === 'travel')!, TAGS.find(t => t.slug === 'budget')!, TAGS.find(t => t.slug === 'schedule')!],
	},
	{
		id: 'c1d2e3f4-5678-49ab-9cde-000000000010',
		slug: 'fitness-coach',
		name: 'Fitness Coach',
		summary: 'Personalized fitness, nutrition, and habit tracking.',
		thumbnailUrl: avatar('c1d2e3f4-5678-49ab-9cde-000000000010'),
		websiteUrl: 'https://fitness.example.com',
		socials: { x: 'https://x.com/fitnesscoach', github: 'https://github.com/example/fitness-coach' },
		ownerWallet: 'DemoWalletFITNESS',
		status: 'published',
		createdAt: '2025-05-08T09:00:00.000Z',
		interfaces: [
			{ id: 'c1d2e3f4-5678-49ab-9cde-000000000010-web', agentId: 'c1d2e3f4-5678-49ab-9cde-000000000010', kind: 'web_ui' as InterfaceKind, url: 'https://fitness.example.com', accessPolicy: null, isPrimary: true },
		],
		tags: [TAGS.find(t => t.slug === 'fitness')!, TAGS.find(t => t.slug === 'health')!, TAGS.find(t => t.slug === 'nutrition')!],
	},
	{
		id: 'c1d2e3f4-5678-49ab-9cde-000000000011',
		slug: 'memecoin-scanner',
		name: 'Memecoin Scanner',
		summary: 'Scans new tokens, filters scams, and highlights early momentum.',
		thumbnailUrl: avatar('c1d2e3f4-5678-49ab-9cde-000000000011'),
		websiteUrl: 'https://memecoin.example.com',
		socials: { x: 'https://x.com/memecoinscanner', github: 'https://github.com/example/memecoin-scanner', farcaster: 'https://warpcast.com/memescanner' },
		ownerWallet: 'DemoWalletMEME',
		status: 'published',
		createdAt: '2025-05-08T11:00:00.000Z',
		interfaces: [
			{ id: 'c1d2e3f4-5678-49ab-9cde-000000000011-web', agentId: 'c1d2e3f4-5678-49ab-9cde-000000000011', kind: 'web_ui' as InterfaceKind, url: 'https://memecoin.example.com', accessPolicy: null, isPrimary: true },
			{ id: 'c1d2e3f4-5678-49ab-9cde-000000000011-api', agentId: 'c1d2e3f4-5678-49ab-9cde-000000000011', kind: 'api' as InterfaceKind, url: 'https://api.memecoin.example.com', accessPolicy: 'public', isPrimary: false },
		],
		tags: [TAGS.find(t => t.slug === 'memecoin')!, TAGS.find(t => t.slug === 'onchain')!, TAGS.find(t => t.slug === 'risk')!, TAGS.find(t => t.slug === 'signals')!],
	},
] 


